#!/usr/bin/env ruby

# xmlvalidate - validate an xml file with an xsd file (local files only)
# 
# There are three ways to call xmlvalidate. The first is the full/long
# form, the other two are convenient shorthands for the first:
# 
# xmlvalidate <xml> <xsd>
# xmlvalidate <basename>
# 
# TODO:
# - gittify
# - Add help
# - Gemmify
# - Refactor to libs for in-code reuse (XML::validate, XML::validate!, etc)
# - Publish to gemcutter
require 'xml'

errors = []
args = ARGV.dup

# Detect first shorthand
if args.size == 1
  args = [ args.first + ".xml", args.first + ".xsd" ]
end

document = LibXML::XML::Document.file(args.first)
schema = LibXML::XML::Schema.new(args.last)

result = document.validate_schema(schema) do |message,flag|
  errors << message
end

if errors.length > 0
  puts "#{args.first} contains errors:"
  puts errors.map {|e| "ERROR: #{e}"}
else
  puts "#{args.first} validates ok according to its schema."
end

exit errors.length

